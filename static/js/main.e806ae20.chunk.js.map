{"version":3,"sources":["api/colors.js","components/Car.js","api/cars.js","components/ColorsById.js","components/Cars.jsx","components/Seach.jsx","components/Colors.jsx","App.jsx","components/VisibleCar.js","index.jsx"],"names":["id","name","cars","brand","rentPrice","colorId","map","car","color","colorsFromServer","find","Cars","selectedCarId","setSelectedCarId","className","cn","onClick","style","charAt","toUpperCase","slice","Seach","query","setQuery","type","placeholder","value","onChange","event","target","Color","selectedColor","setSelectedColor","App","useState","visibleCars","transport","filter","normalizedQuery","trim","toLowerCase","includes","getVisibileCars","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e806ae20.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import carsFromServer from '../api/cars';\nimport { getColorsById } from './ColorsById';\n\nexport const cars = carsFromServer.map(car => ({\n  ...car,\n  color: getColorsById(car.colorId),\n}));\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import colorsFromServer from '../api/colors';\n\nexport function getColorsById(colorId) {\n  return colorsFromServer.find(color => color.id === colorId) || 'unknown';\n}\n","import cn from 'classnames';\n\nconst Cars = ({ cars, selectedCarId, setSelectedCarId }) => (\n  <table>\n    <thead>\n      <tr>\n        <th>Id</th>\n        <th>Brand</th>\n        <th>Color</th>\n        <th>Rent price</th>\n      </tr>\n    </thead>\n    <tbody>\n      {cars.map(car => (\n        <tr\n          key={car.id}\n          className={cn({\n            'is-active': car.id === selectedCarId,\n          })}\n          onClick={() => {\n            setSelectedCarId(car.id);\n          }}\n        >\n          <td>{car.id}</td>\n          <td>{car.brand}</td>\n          <td style={{ color: `${car.color.name}` }}>\n            {car.color.name.charAt(0).toUpperCase() + car.color.name.slice(1)}\n          </td>\n          <td>{car.rentPrice}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default Cars;\n","const Seach = ({ query, setQuery }) => (\n  <input\n    type=\"search\"\n    placeholder=\"Find by car brand\"\n    className=\"input\"\n    value={query}\n    onChange={(event) => {\n      setQuery(event.target.value);\n    }}\n  />\n);\n\nexport default Seach;\n","import colorsFromServer from '../api/colors';\n\nconst Color = ({ selectedColor, setSelectedColor }) => (\n  <select\n    value={selectedColor}\n    onChange={(event) => {\n      setSelectedColor(event.target.value);\n    }}\n  >\n    <option value=\"All\">Chose a color</option>\n    {colorsFromServer.map(color => (\n      <option\n        key={color.id}\n        value={color.name}\n      >\n        {color.name}\n      </option>\n    ))}\n  </select>\n);\n\nexport default Color;\n","// import React from 'react';\nimport { useState } from 'react';\n// import cn from 'classnames';\n// import carsFromServer from './api/cars';\n// import colorsFromServer from './api/colors';\n\nimport { getVisibileCars } from './components/VisibleCar';\nimport { cars } from './components/Car';\n\nimport Cars from './components/Cars';\nimport Seach from './components/Seach';\nimport Color from './components/Colors';\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\n// function getColorsById(colorId) {\n//   return colorsFromServer.find(color => color.id === colorId) || 'unknown';\n// }\n\n// export const cars = carsFromServer.map(car => ({\n//   ...car,\n//   color: getColorsById(car.colorId),\n// }));\n\n// const getVisibileCars = ({\n//   transport,\n//   selectedCarId,\n//   query,\n//   selectedColor,\n// }) => {\n//   let visibleCars = [...transport];\n\n//   if (selectedCarId) {\n//     visibleCars = visibleCars.filter(car => (\n//       car.color.id === selectedCarId\n//     ));\n//   }\n\n//   if (query) {\n//     const normalizedQuery = query.trim().toLowerCase();\n\n//     visibleCars = visibleCars.filter(car => (\n//       car.brand.toLowerCase().includes(normalizedQuery)\n//     ));\n//   }\n\n//   if (selectedColor) {\n//     visibleCars = visibleCars.filter(car => selectedColor === 'All'\n//       || car.color.name === selectedColor);\n//   }\n\n//   return visibleCars;\n// };\n\nexport const App = () => {\n  const [selectedCarId, setSelectedCarId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [selectedColor, setSelectedColor] = useState('All');\n\n  const visibleCars = getVisibileCars({\n    transport: cars,\n    selectedCarId,\n    query,\n    selectedColor,\n  });\n\n  return (\n    <div>\n      <Seach\n        query={query}\n        setQuery={setQuery}\n      />\n      <Color\n        selectedColor={selectedColor}\n        setSelectedColor={setSelectedColor}\n      />\n      <Cars\n        cars={visibleCars}\n        selectedCarId={selectedCarId}\n        setSelectedCarId={setSelectedCarId}\n      />\n      {/* <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        className=\"input\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      /> */}\n\n      {/* <select\n        value={selectedColor}\n        onChange={(event) => {\n          setSelectedColor(event.target.value);\n        }}\n      >\n        <option value=\"All\">Chose a color</option>\n        {colorsFromServer.map(color => (\n          <option\n            key={color.id}\n            value={color.name}\n          >\n            {color.name}\n          </option>\n        ))}\n      </select> */}\n\n      {/* <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {visibleCars.map(car => (\n            <tr\n              key={car.id}\n              className={cn({\n                'is-active': car.id === selectedCarId,\n              })}\n              onClick={() => {\n                setSelectedCarId(car.id);\n              }}\n            >\n              <td>{car.id}</td>\n              <td>{car.brand}</td>\n              <td style={{ color: `${car.color.name}` }}>{car.color.name}</td>\n              <td>{car.rentPrice}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table> */}\n    </div>\n  );\n};\n","export function getVisibileCars({\n  transport,\n  selectedCarId,\n  query,\n  selectedColor,\n}) {\n  let visibleCars = [...transport];\n\n  if (selectedCarId) {\n    visibleCars = visibleCars.filter(car => (\n      car.color.id === selectedCarId\n    ));\n  }\n\n  if (query) {\n    const normalizedQuery = query.trim().toLowerCase();\n\n    visibleCars = visibleCars.filter(car => (\n      car.brand.toLowerCase().includes(normalizedQuery)\n    ));\n  }\n\n  if (selectedColor) {\n    visibleCars = visibleCars.filter(car => selectedColor === 'All'\n      || car.color.name === selectedColor);\n  }\n\n  return visibleCars;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}